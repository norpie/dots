#!/usr/bin/env bash
# File: media
# Description: This script will control playing media using playerctl,
# this is a wrapper script for playerctl to make it behave better.

MEDIA_PLAYER_CACHE=~/.cache/recent-media-player

if [[ -z $1 ]]; then
    echo "Usage: $(filename $0) [pause|play-pause|stop|next|previous|get-active-player|save-recent-player|get-recent-player]"
    exit 1
fi

case $1 in
    pause)
        playerctl -p $(media get-active-player) pause
        ;;
    play-pause)
        active_player=$(media get-active-player)
        if [[ $(playerctl -p $active_player status) == "Playing" ]]; then
            playerctl -p $active_player pause
        else
            playerctl -p $(media get-recent-player) play
        fi
        ;;
    stop)
        playerctl -p $(media get-active-player) stop
        ;;
    next)
        playerctl -p $(media get-active-player) next
        ;;
    previous)
        playerctl -p $(media get-active-player) previous
        ;;
    get-active-player)
        playerctl -a status -f '{{playerName}} {{status}}' | grep Playing | awk '{print $1}'
        ;;
    save-recent-player)
        active_player=$(media get-active-player)
        if [[ -z $active_player ]]; then
            exit 1
        fi
        echo $active_player > $MEDIA_PLAYER_CACHE
        ;;
    get-recent-player)
        cat $MEDIA_PLAYER_CACHE
        if [[ $? -ne 0 ]]; then
            playerctl -a status -f '{{playerName}}' | head -n 1 | awk '{print $1}'
        fi
        ;;
    *)
        echo "Usage: $(filename $0) [play|pause|play-pause|stop|next|previous|get-active-player|save-recent-player|get-recent-player]"
        exit 1
        ;;
esac
