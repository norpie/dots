#!/usr/bin/env bash

# Small cli to help with project management

# Usage: project [--fallback] [command] [args]
#                - root
#                - subroot

# Options:
#  --fallback: return home directory if no project root is found

# Commands:
#  - root: get the root of the project root (always scan up to `.git`)
#  - subroot: get the root of the subproject (scan up to one of [`Cargo.toml`, `package.json`, `Makefile`])

function project__root() {
    local dir=$PWD

    while [[ ! -d "$dir/.git" ]]; do
        # If we're at the root directory, stop searching
        if [[ "$dir" == "/" ]]; then
            return 1
        fi
        dir=$(dirname "$dir")
    done

    echo "$dir"
}

function project__subroot() {
    local dir=$PWD
    local subroot_files=("Cargo.toml" "package.json" "Makefile" ".git")

    while true; do
        for file in "${subroot_files[@]}"; do
            if [[ -f "$dir/$file" ]]; then
                echo "$dir"
                exit 0
            fi
        done
        dir=$(dirname "$dir")

        # Stop if we reach the root directory
        if [[ "$dir" == "/" ]]; then
            break
        fi
    done

    project__root
}

[[ $# -eq 0 ]] && echo "Usage: project [--fallback] [command] [args]" && exit 1

# Parse options and extract command
fallback=false
command=""
args=()

for arg in "$@"; do
    case "$arg" in
        --fallback)
            fallback=true
            ;;
        *)
            if [[ -z "$command" ]]; then
                command="$arg"
            else
                args+=("$arg")
            fi
            ;;
    esac
done

[[ -z "$command" ]] && echo "Usage: project [--fallback] [command] [args]" && exit 1

case $command in
    root)
        result=$(project__root)
        if [[ $? -eq 0 && -n "$result" ]]; then
            echo "$result"
        elif [[ "$fallback" == true ]]; then
            echo "$HOME"
        fi
        ;;
    subroot)
        project_subroot=$(project__subroot)
        if [[ "$project_subroot" == "$PWD" ]]; then
            result=$(project__root)
            if [[ $? -eq 0 && -n "$result" ]]; then
                echo "$result"
            elif [[ "$fallback" == true ]]; then
                echo "$HOME"
            fi
        else
            echo "$project_subroot"
        fi
        ;;
    *)
        echo "Unknown command: $command"
        exit 1
        ;;
esac
